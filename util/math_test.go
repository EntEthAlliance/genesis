package util

import (
	"fmt"
	"reflect"
	"strconv"
	"testing"
)

func TestDistances(t *testing.T) {
	var test = []struct {
		pnts []Point
		expected [][]float64
	}{
		{
			[]Point{{2, 3}, {4, 6}, {0, 1}, {3, 3}, {10, 7}},
			[][]float64{{0, 3.605551275463989, 2.8284271247461903, 1,  8.94427190999916},
				{3.605551275463989, 0, 6.4031242374328485, 3.1622776601683795, 6.082762530298219},
				{2.8284271247461903, 6.4031242374328485, 0, 3.605551275463989, 11.661903789690601},
				{1, 3.1622776601683795, 3.605551275463989, 0, 8.06225774829855},
				{8.94427190999916, 6.082762530298219, 11.661903789690601, 8.06225774829855, 0}},
		},
		{
			[]Point{{2, 3}, {4, 6}, {0, 1}, {3, 3}, {10, 7}},
			[][]float64{{0, 3.605551275463989, 2.8284271247461903, 1, 8.94427190999916},
				{3.605551275463989, 0, 6.4031242374328485, 3.1622776601683795, 6.082762530298219},
				{2.8284271247461903, 6.4031242374328485, 0, 3.605551275463989, 11.661903789690601},
				{1, 3.1622776601683795, 3.605551275463989, 0, 8.06225774829855},
				{8.94427190999916, 6.082762530298219, 11.661903789690601, 8.06225774829855, 0}},
		},
		{
			[]Point{{0, 0}, {19, 3}, {5, 8}, {2, 0}, {0, 15}},
			[][]float64{{0, 19.235384061671343, 9.433981132056603, 2, 15},
				{19.235384061671343, 0, 14.866068747318506, 17.26267650163207, 22.47220505424423},
				{9.433981132056603, 14.866068747318506, 0, 8.54400374531753, 8.602325267042627},
				{2, 17.26267650163207, 8.54400374531753, 0, 15.132745950421556},
				{15, 22.47220505424423, 8.602325267042627, 15.132745950421556, 0}},
		},
	}

	for i, tt := range test {
		t.Run(strconv.Itoa(i), func(t *testing.T) {
			if !reflect.DeepEqual(Distances(tt.pnts), tt.expected) {
				fmt.Errorf("return value from Distances does not equal expected return value")
			}
		})
	}
}







